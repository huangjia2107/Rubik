<UserControl x:Class="Rubik.Demo.DragList.Views.MainControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rubik="https://github.com/huangjia2107/Rubik/"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="true"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <UserControl.Resources>

        <Style x:Key="VerListBoxItemStyle" 
               BasedOn="{StaticResource {x:Static rubik:ResourceKeys.RubikListBoxItemStyleKey}}"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="0,2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDragSource}" Value="true">
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="rubik:ElementProperty.CornerRadius" Value="2"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsDragOver}" Value="true"/>
                        <Condition Binding="{Binding IsDragOverUp}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="OrangeRed" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="#d6ebff"/>
                    <Setter Property="Foreground" Value="#404040"/>
                    <Setter Property="BorderThickness" Value="0,2"/>
                    <Setter Property="rubik:ElementProperty.CornerRadius" Value="0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsDragOver}" Value="true"/>
                        <Condition Binding="{Binding IsDragOverDown}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="OrangeRed" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="#d6ebff"/>
                    <Setter Property="Foreground" Value="#404040"/>
                    <Setter Property="BorderThickness" Value="0,2"/>
                    <Setter Property="rubik:ElementProperty.CornerRadius" Value="0"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HorListBoxItemStyle" 
               BasedOn="{StaticResource {x:Static rubik:ResourceKeys.RubikListBoxItemStyleKey}}"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="2,0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="rubik:ElementProperty.CornerRadius" Value="2"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsDragOver}" Value="true"/>
                        <Condition Binding="{Binding IsDragOverLeft}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="OrangeRed" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="#d6ebff"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsDragOver}" Value="true"/>
                        <Condition Binding="{Binding IsDragOverRight}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="OrangeRed" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="#d6ebff"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="0,2"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="border" SnapsToDevicePixels="true" 
                                CornerRadius="{Binding (rubik:ElementProperty.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="contentPresenter" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter TargetName="border" Property="CornerRadius" Value="2"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDragOver}" Value="true"/>
                                    <Condition Binding="{Binding IsDragOverUp}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Background" Value="#d6ebff"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDragOver}" Value="true"/>
                                    <Condition Binding="{Binding IsDragOverDown}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Background" Value="#d6ebff"/>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="0"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" Grid.RowSpan="3" CornerRadius="4" BorderThickness="1" BorderBrush="LightGray" Padding="10">
            <ListBox x:Name="VerListBoxName" AllowDrop="True"
                     ItemsSource="{Binding TreeCollection}"
                     Background="{Binding TreeBackground}"
                     DisplayMemberPath="Name"
                     ItemContainerStyle="{StaticResource VerListBoxItemStyle}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     Style="{StaticResource {x:Static rubik:ResourceKeys.RubikListBoxStyleKey}}"/>
        </Border>

        <Border Grid.Column="2" Grid.Row="0" CornerRadius="4" BorderThickness="1" BorderBrush="LightGray" Padding="10">
            <ListBox x:Name="HorListBoxName" Height="30" AllowDrop="True"
                     ItemsSource="{Binding TreeCollection}"
                     Background="{Binding TreeBackground}"
                     DisplayMemberPath="Name"
                     ItemContainerStyle="{StaticResource HorListBoxItemStyle}"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     Style="{StaticResource {x:Static rubik:ResourceKeys.RubikListBoxStyleKey}}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Border>

        <Border Grid.Column="2" Grid.Row="2" CornerRadius="4" BorderThickness="1" BorderBrush="LightGray" Padding="10">
            <ListBox x:Name="WrapListBoxName" AllowDrop="True"
                     ItemsSource="{Binding TreeCollection}"
                     Background="{Binding TreeBackground}"
                     DisplayMemberPath="Name"
                     ItemContainerStyle="{StaticResource HorListBoxItemStyle}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     Style="{StaticResource {x:Static rubik:ResourceKeys.RubikListBoxStyleKey}}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </Border>
    </Grid>
</UserControl>
