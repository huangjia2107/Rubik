<UserControl x:Class="Rubik.Demo.DragTree.Views.NodeTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rubik="https://github.com/huangjia2107/Rubik/"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="true"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <UserControl.Resources>
        
        <Style TargetType="{x:Type TreeViewItem}"
               BasedOn="{StaticResource {x:Static rubik:ResourceKeys.RubikTreeViewItemStyleKey}}">
            <Setter Property="Visibility" Value="{Binding Visibility}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="1" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ToggleButton x:Name="Expander" ClickMode="Press" Height="25" VerticalAlignment="Top"
                                          IsChecked="{Binding IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" 
                                          Style="{StaticResource {x:Static rubik:ResourceKeys.RubikTreeViewExpandCollapseToggleStyleKey}}"/>

                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border x:Name="border" SnapsToDevicePixels="true"
                                        Background="Transparent"
                                        BorderBrush="Transparent" 
                                        BorderThickness="0,2"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter TargetName="border" Property="CornerRadius" Value="2"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDragOver}" Value="true"/>
                                    <Condition Binding="{Binding IsDragOverUp}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Background" Value="#d6ebff"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsDragOver}" Value="true"/>
                                    <Condition Binding="{Binding IsDragOverDown}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="Background" Value="#d6ebff"/>
                                <Setter TargetName="ItemsHost" Property="Opacity" Value="0.5"/>
                            </MultiDataTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </MultiTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock FontSize="15" FontWeight="Bold" Margin="0,0,0,10" Foreground="#404040"
                   Text="Drag for Exchange"/>
        <Border Grid.Row="1" CornerRadius="4" BorderThickness="1" BorderBrush="LightGray" Padding="10">
            <TreeView x:Name="TreeViewName" AllowDrop="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      Background="{Binding TreeBackground}"
                      ItemsSource="{Binding TreeCollection}"
                      ItemTemplate="{DynamicResource TreeDataTemplateKey}"
                      Style="{StaticResource {x:Static rubik:ResourceKeys.RubikTreeViewStyleKey}}"/>
        </Border>
    </Grid>
</UserControl>
